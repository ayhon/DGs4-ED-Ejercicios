//Author: Ayhon
#include <bits/stdc++.h>
using namespace std;

bool resuelveCaso() {
	int n; cin >> n;
	if(n == 0) return false;
	
	vector<unordered_set<int>> nums(n);

	for(int i = 0; i < n; ++i){
		string name; cin >> name;
		num_of[name] = i;
		name_of.push_back(name);

		int x; cin >> x;
		while(x != 0){
			nums[i].insert(x);
			cin >> x;
		}
	}

	vector<int> crossed(n,0);

	cin.ignore(1);
	string line; getline(cin, line);
	stringstream ss(line);
	int x;
	while(ss >> x){
		for(int i = 0; i < (int)nums.size(); ++i)
			crossed[i] += nums[i].count(x); // O(N)
	}
	
	vector<string> sol;
	for(int i = 0; i < (int)nums.size(); ++i) 
		if (crossed[i] == (int)nums[i].size()) 
			sol.push_back(name_of[i]);

	sort(sol.begin(),sol.end());
	cout << sol.front();
	for(int i = 1; i < (int)sol.size(); ++i)
		cout << " " << sol[i];
	cout << '\n';

	return true;
}

int main() {
	while(resuelveCaso());
	return 0;
}

